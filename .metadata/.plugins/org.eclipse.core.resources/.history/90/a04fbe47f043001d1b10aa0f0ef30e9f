package br.com.syonet.resources;

import java.util.List;

import javax.inject.Inject;
import javax.ws.rs.Consumes;
import javax.ws.rs.DELETE;
import javax.ws.rs.GET;
import javax.ws.rs.PATCH;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;

import br.com.syonet.entity.Livro;
import br.com.syonet.service.LivroService;

@Path( "/api/livro" )
public class LivroResource {

	@Inject
	LivroService service;
	
	@GET
	@Produces( MediaType.APPLICATION_JSON )
	public Response getAllLivros() {
		List< Livro > livros = this.service.getAllLivros();
		return Response.ok( livros ).build();
	}
	
	@GET
	@Path( "/{id}" )
	@Produces( MediaType.APPLICATION_JSON )
	public Response getAllAutores( @PathParam( value = "id" ) Integer id ) {
		Autor autor = this.service.getById(id);
		return Response.ok( autor ).build();
	}
	
	@GET
	@Path( "/{nome}" )
	@Produces( MediaType.APPLICATION_JSON )
	public Response getAllAutores( @PathParam( value = "nome" ) String nome ) {
		Autor autor = this.service.getByName(nome);
		return Response.ok( autor ).build();
	}
	
	@POST
	@Produces( MediaType.APPLICATION_JSON )
	@Consumes( MediaType.APPLICATION_JSON )
	public Response saveAutor ( Autor autor ) {
		this.service.saveAutor(autor);
		return Response.accepted().build();
	}
	
	@PATCH
	@Produces( MediaType.APPLICATION_JSON )
	@Consumes( MediaType.APPLICATION_JSON )
	public Response updateAutor ( Autor autor ) {
		this.service.updateAutor(autor);
		return Response.accepted().build();
	}
	
	@DELETE
	@Produces( MediaType.APPLICATION_JSON )
	@Consumes( MediaType.APPLICATION_JSON )
	public Response deleteAutor ( Autor autor ) {
		this.service.deleteAutor(autor);
		return Response.accepted().build();
	}
}
